{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/megax.MegaX\/documentation\/MegaX","doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraUI","doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView","doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView\/View-Implementations"]]},"abstract":[{"text":"Sets the device types for the camera session to find the appropriate capture device.","type":"text"}],"variants":[{"paths":["\/documentation\/megax\/cameraview\/capturedevicetypes(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView\/captureDeviceTypes(_:)"},"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"MegaX"}],"roleHeading":"Instance Method","role":"symbol","platforms":[{"introducedAt":"17.0","name":"iOS","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"14.0","beta":false,"unavailable":false,"name":"macOS","deprecated":false},{"name":"Mac Catalyst","beta":false,"introducedAt":"17.0","deprecated":false,"unavailable":false},{"introducedAt":"17.0","deprecated":false,"unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"17.0","name":"iPadOS","deprecated":false,"unavailable":false,"beta":false}],"title":"captureDeviceTypes(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"captureDeviceTypes"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureDevice","text":"AVCaptureDevice"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@T@AVCaptureDeviceType","kind":"typeIdentifier","text":"DeviceType"},{"kind":"text","text":"...) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP5MegaXE18captureDeviceTypesyQrSo09AVCaptureF4Typead_tF::SYNTHESIZED::s:5MegaX10CameraViewV","extendedModule":"SwiftUICore"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"captureDeviceTypes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"deviceTypes","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AVCaptureDevice","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@AVCaptureDeviceType","text":"DeviceType"},{"text":"...) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"On iOS, it uses a virtual device which consists of all physical lenses."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"On macOS, it uses wide-angle camera and continuity cameras."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you want to use a specific lens, you can use this modifier to configure the right lens."}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"Be sure to contain ","type":"text"},{"type":"codeVoice","code":".builtInWideAngleCamera"},{"type":"text","text":" as a fallback camera."}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"references":{"doc://megax.MegaX/documentation/MegaX/CameraView/captureDeviceTypes(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"captureDeviceTypes","kind":"identifier"},{"kind":"text","text":"("},{"text":"AVCaptureDevice","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@T@AVCaptureDeviceType"},{"text":"...) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"abstract":[{"text":"Sets the device types for the camera session to find the appropriate capture device.","type":"text"}],"title":"captureDeviceTypes(_:)","type":"topic","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView\/captureDeviceTypes(_:)","role":"symbol","url":"\/documentation\/megax\/cameraview\/capturedevicetypes(_:)"},"doc://megax.MegaX/documentation/MegaX/CameraView":{"role":"symbol","title":"CameraView","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CameraView","kind":"identifier"}],"navigatorTitle":[{"text":"CameraView","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that holds a camera object and enables you to build a fully customized camera experience."}],"url":"\/documentation\/megax\/cameraview"},"doc://megax.MegaX/documentation/MegaX/CameraView/View-Implementations":{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraView\/View-Implementations","type":"topic","role":"collectionGroup","title":"View Implementations","kind":"article","url":"\/documentation\/megax\/cameraview\/view-implementations","abstract":[]},"doc://megax.MegaX/documentation/MegaX/CameraUI":{"abstract":[{"text":"Built-in camera components and view to help you build your camera UI.","type":"text"}],"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/CameraUI","type":"topic","url":"\/documentation\/megax\/cameraui","kind":"article","title":"Camera UI","role":"collectionGroup"},"doc://megax.MegaX/documentation/MegaX":{"url":"\/documentation\/megax","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX","type":"topic","title":"MegaX","kind":"symbol","abstract":[{"text":"Less code, better experience for both developers and users.","type":"text"}],"role":"collection"}}}