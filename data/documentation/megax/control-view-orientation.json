{"kind":"article","hierarchy":{"paths":[["doc:\/\/megax.MegaX\/documentation\/MegaX"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/megax.MegaX\/documentation\/MegaX\/control-view-orientation"},"abstract":[{"text":"Learn how to coordinates with current device orientation.","type":"text"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)","doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)"],"anchor":"Orientation","title":"Orientation"}],"sections":[],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"It enables developers to design and implement views tailored to specific device orientations, rather than relying on SwiftUI’s default dynamic orientation rendering."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By providing precise control over how content is displayed in different orientations, it ensures a consistent and optimized user experience, regardless of how the device is held."}]},{"inlineContent":[{"text":"This approach enhances the flexibility and customization capabilities for developers, allowing them to deliver more polished and orientation-specific user interfaces.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Fixed Orientation View","anchor":"Fixed-Orientation-View"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","isActive":true,"type":"reference"},{"type":"text","text":" to get automatic counter rotation that transits along side with the device to match the specific orientation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, when using camera view, you’ll notice that when you rotate your device, the preview gets rotated as well. To fix that, wrapping the preview layer inside "},{"type":"reference","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","isActive":true},{"text":".","type":"text"}]},{"syntax":"swift","code":["struct ExampleView: View {","    var body: some View {","        FixedOrientationView(matching: .portrait) {","            GradientBackgroundView()","                .overlay {","                    VStack(spacing: 20) {","                        Image(systemName: \"iphone.gen3\")","                            .font(.system(size: 64, weight: .thin))","                    }","                }","        }","        .ignoresSafeArea()","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"image","identifier":"fixed-orientation-view.jpeg"}],"type":"paragraph"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUI renders the view in target orientation regardless of current device orientation.","type":"text"}]}],"type":"aside"},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","isActive":true},{"text":" should match the size of current window, ignoring or considering safe area, otherwise, the transition behavior may be odd and you’ll receive a misuse warning log in the console.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ignoring safe area by using "},{"type":"codeVoice","code":"ignoresSafeArea(_:)"},{"type":"text","text":" modifier on "},{"type":"codeVoice","code":"FixedOrientationView"},{"type":"text","text":"."}]}]},{"level":2,"anchor":"Coordinate-with-Orientation","type":"heading","text":"Coordinate with Orientation"},{"inlineContent":[{"type":"text","text":"Obtain counter rotation angle that can be used to rotate the view to match target orientation via "},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The target rotation angle calculation is ","type":"text"},{"code":".zero - angle","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"There is a convenience modifier ","type":"text"},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)","isActive":true,"type":"reference"},{"type":"text","text":" that rotates the view with counter rotation angle."}],"type":"paragraph"},{"style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can combine this modifier with "},{"type":"reference","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","isActive":true},{"text":", where the whole view is orientation-fixed, but the individual view is auto-rotated.","type":"text"}]}],"type":"aside"},{"syntax":"swift","type":"codeListing","code":["struct ExampleView: View {","    @State private var angle = Angle.zero","","    var body: some View {","        GradientBackgroundView()","            .ignoresSafeArea()","            .overlay {","                VStack(spacing: 20) {","                    Image(systemName: \"iphone.gen3\")","                        .font(.system(size: 64, weight: .thin))","                    Text(\"Rotation Angle: \\(angle.degrees.formatted())\")","                }","                .counterRotationAngle($angle, matching: .portrait)","                .rotationEffect(angle)","            }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"counter-rotation-angle.jpeg"}]},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI renders the view in current orientation rather than matching specified orientation."}]}]}],"kind":"content"}],"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"MegaX"}],"title":"Control View Orientation"},"variants":[{"paths":["\/documentation\/megax\/control-view-orientation"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"counter-rotation-angle.jpeg":{"type":"image","variants":[{"url":"\/images\/megax.MegaX\/counter-rotation-angle.jpeg","traits":["1x","light"]}],"alt":null,"identifier":"counter-rotation-angle.jpeg"},"fixed-orientation-view.jpeg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/megax.MegaX\/fixed-orientation-view.jpeg"}],"identifier":"fixed-orientation-view.jpeg","alt":null},"doc://megax.MegaX/documentation/MegaX":{"url":"\/documentation\/megax","kind":"symbol","abstract":[{"type":"text","text":"Less code, better experience for both developers and users."}],"role":"collection","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX","title":"MegaX","type":"topic"},"doc://megax.MegaX/documentation/MegaX/SwiftUICore/View/counterRotationEffect(matching:)":{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)","url":"\/documentation\/megax\/swiftuicore\/view\/counterrotationeffect(matching:)","title":"counterRotationEffect(matching:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}]},"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"counterRotationEffect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI20InterfaceOrientationV","kind":"typeIdentifier","text":"InterfaceOrientation"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Rotates a view in reverse based on device orientation changes."}]},"doc://megax.MegaX/documentation/MegaX/SwiftUICore/View/counterRotationAngle(_:matching:)":{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)","url":"\/documentation\/megax\/swiftuicore\/view\/counterrotationangle(_:matching:)","title":"counterRotationAngle(_:matching:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"counterRotationAngle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Angle","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5AngleV"},{"kind":"text","text":">, "},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": "},{"text":"InterfaceOrientation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI20InterfaceOrientationV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"abstract":[{"type":"text","text":"Associates a binding to a counter rotation angle that matches the given orientation with the view."}]},"doc://megax.MegaX/documentation/MegaX/FixedOrientationView":{"url":"\/documentation\/megax\/fixedorientationview","type":"topic","title":"FixedOrientationView","role":"symbol","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","abstract":[{"type":"text","text":"A view that dynamically rotates its content to match the orientation."}],"navigatorTitle":[{"text":"FixedOrientationView","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FixedOrientationView"}]}}}