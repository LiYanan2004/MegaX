{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/megax\/control-view-orientation"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Orientation","anchor":"Orientation","identifiers":["doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)","doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)"]}],"sections":[],"abstract":[{"text":"Learn how to coordinates with current device orientation.","type":"text"}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/megax.MegaX\/documentation\/MegaX\/control-view-orientation"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"It enables developers to design and implement views tailored to specific device orientations, rather than relying on SwiftUI’s default dynamic orientation rendering.","type":"text"}]},{"inlineContent":[{"type":"text","text":"By providing precise control over how content is displayed in different orientations, it ensures a consistent and optimized user experience, regardless of how the device is held."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This approach enhances the flexibility and customization capabilities for developers, allowing them to deliver more polished and orientation-specific user interfaces.","type":"text"}]},{"type":"heading","anchor":"Fixed-Orientation-View","text":"Fixed Orientation View","level":2},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","isActive":true,"type":"reference"},{"text":" to get automatic counter rotation that transits along side with the device to match the specific orientation.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, when using camera view, you’ll notice that when you rotate your device, the preview gets rotated as well. To fix that, wrapping the preview layer inside "},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct ExampleView: View {","    var body: some View {","        FixedOrientationView(matching: .portrait) {","            GradientBackgroundView()","                .overlay {","                    VStack(spacing: 20) {","                        Image(systemName: \"iphone.gen3\")","                            .font(.system(size: 64, weight: .thin))","                    }","                }","        }","        .ignoresSafeArea()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"fixed-orientation-view.jpeg"}]},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"SwiftUI renders the view in target orientation regardless of current device orientation.","type":"text"}],"type":"paragraph"}]},{"type":"aside","name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView"},{"type":"text","text":" should match the size of current window, ignoring or considering safe area, otherwise, the transition behavior may be odd and you’ll receive a misuse warning log in the console."}]},{"inlineContent":[{"type":"text","text":"Ignoring safe area by using "},{"code":"ignoresSafeArea(_:)","type":"codeVoice"},{"text":" modifier on ","type":"text"},{"type":"codeVoice","code":"FixedOrientationView"},{"text":".","type":"text"}],"type":"paragraph"}]},{"text":"Coordinate with Orientation","type":"heading","level":2,"anchor":"Coordinate-with-Orientation"},{"type":"paragraph","inlineContent":[{"text":"Obtain counter rotation angle that can be used to rotate the view to match target orientation via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"The target rotation angle calculation is "},{"code":".zero - angle","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"There is a convenience modifier ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)"},{"text":" that rotates the view with counter rotation angle.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can combine this modifier with "},{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","type":"reference","isActive":true},{"text":", where the whole view is orientation-fixed, but the individual view is auto-rotated.","type":"text"}]}],"type":"aside","style":"tip","name":"Tip"},{"syntax":"swift","type":"codeListing","code":["struct ExampleView: View {","    @State private var angle = Angle.zero","","    var body: some View {","        GradientBackgroundView()","            .ignoresSafeArea()","            .overlay {","                VStack(spacing: 20) {","                    Image(systemName: \"iphone.gen3\")","                        .font(.system(size: 64, weight: .thin))","                    Text(\"Rotation Angle: \\(angle.degrees.formatted())\")","                }","                .counterRotationAngle($angle, matching: .portrait)","                .rotationEffect(angle)","            }","    }","}"]},{"inlineContent":[{"identifier":"counter-rotation-angle.jpeg","type":"image"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI renders the view in current orientation rather than matching specified orientation."}]}],"style":"note","type":"aside","name":"Note"}]}],"metadata":{"title":"Control View Orientation","roleHeading":"Article","role":"article","modules":[{"name":"MegaX"}]},"hierarchy":{"paths":[["doc:\/\/megax.MegaX\/documentation\/MegaX"]]},"references":{"doc://megax.MegaX/documentation/MegaX/SwiftUICore/View/counterRotationEffect(matching:)":{"url":"\/documentation\/megax\/swiftuicore\/view\/counterrotationeffect(matching:)","title":"counterRotationEffect(matching:)","type":"topic","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationEffect(matching:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"View"},{"text":".","type":"text"}]},"abstract":[{"text":"Rotates a view in reverse based on device orientation changes.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"counterRotationEffect"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI20InterfaceOrientationV","text":"InterfaceOrientation","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"kind":"symbol"},"counter-rotation-angle.jpeg":{"variants":[{"url":"\/images\/megax.MegaX\/counter-rotation-angle.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"counter-rotation-angle.jpeg"},"fixed-orientation-view.jpeg":{"alt":null,"identifier":"fixed-orientation-view.jpeg","variants":[{"url":"\/images\/megax.MegaX\/fixed-orientation-view.jpeg","traits":["1x","light"]}],"type":"image"},"doc://megax.MegaX/documentation/MegaX/FixedOrientationView":{"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedOrientationView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that dynamically rotates its content to match the orientation."}],"type":"topic","role":"symbol","title":"FixedOrientationView","url":"\/documentation\/megax\/fixedorientationview","navigatorTitle":[{"text":"FixedOrientationView","kind":"identifier"}]},"doc://megax.MegaX/documentation/MegaX/SwiftUICore/View/counterRotationAngle(_:matching:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}]},"title":"counterRotationAngle(_:matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"counterRotationAngle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5AngleV","text":"Angle"},{"kind":"text","text":">, "},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI20InterfaceOrientationV","text":"InterfaceOrientation","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"text":"Associates a binding to a counter rotation angle that matches the given orientation with the view.","type":"text"}],"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/SwiftUICore\/View\/counterRotationAngle(_:matching:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/megax\/swiftuicore\/view\/counterrotationangle(_:matching:)"},"doc://megax.MegaX/documentation/MegaX":{"role":"collection","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX","title":"MegaX","type":"topic","kind":"symbol","url":"\/documentation\/megax","abstract":[{"type":"text","text":"Less code, better experience for both developers and users."}]}}}