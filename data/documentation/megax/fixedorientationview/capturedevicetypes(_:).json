{"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView\/captureDeviceTypes(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"captureDeviceTypes","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"deviceTypes","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AVCaptureDevice","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"text":".","kind":"text"},{"text":"DeviceType","kind":"typeIdentifier","preciseIdentifier":"c:@T@AVCaptureDeviceType"},{"kind":"text","text":"...) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"On iOS, it uses a virtual device which consists of all physical lenses."}],"type":"paragraph"},{"inlineContent":[{"text":"On macOS, it uses wide-angle camera and continuity cameras.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If you want to use a specific lens, you can use this modifier to configure the right lens.","type":"text"}]},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be sure to contain "},{"code":".builtInWideAngleCamera","type":"codeVoice"},{"text":" as a fallback camera.","type":"text"}]}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/megax\/fixedorientationview\/capturedevicetypes(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"SwiftUICore","title":"captureDeviceTypes(_:)","externalID":"s:7SwiftUI4ViewP5MegaXE18captureDeviceTypesyQrSo09AVCaptureF4Typead_tF::SYNTHESIZED::s:5MegaX20FixedOrientationViewV","role":"symbol","symbolKind":"method","remoteSource":{"fileName":"Modifiers.swift","url":"https:\/\/github.com\/LiYanan2004\/MegaX\/blob\/refs\/heads\/main\/Sources\/MegaX\/Camera\/Modifiers.swift#L17"},"roleHeading":"Instance Method","modules":[{"name":"MegaX","relatedModules":["SwiftUICore"]}],"platforms":[{"unavailable":false,"name":"iOS","beta":false,"introducedAt":"17.0","deprecated":false},{"deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false,"name":"iPadOS"},{"deprecated":false,"unavailable":false,"name":"Mac Catalyst","beta":false,"introducedAt":"17.0"},{"deprecated":false,"introducedAt":"14.0","name":"macOS","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"17.0","name":"tvOS","unavailable":false,"beta":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"captureDeviceTypes","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)AVCaptureDevice","text":"AVCaptureDevice","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@AVCaptureDeviceType","text":"DeviceType"},{"text":"...) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/megax.MegaX\/documentation\/MegaX","doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView","doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView\/View-Implementations"]]},"abstract":[{"type":"text","text":"Sets the device types for the camera session to find the appropriate capture device."}],"references":{"doc://megax.MegaX/documentation/MegaX/FixedOrientationView/View-Implementations":{"url":"\/documentation\/megax\/fixedorientationview\/view-implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"View Implementations","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView\/View-Implementations","type":"topic"},"doc://megax.MegaX/documentation/MegaX":{"title":"MegaX","abstract":[{"text":"Less code, better experience for both developers and users.","type":"text"}],"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX","role":"collection","kind":"symbol","url":"\/documentation\/megax","type":"topic"},"doc://megax.MegaX/documentation/MegaX/FixedOrientationView":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FixedOrientationView"}],"title":"FixedOrientationView","abstract":[{"text":"A view that dynamically rotates its content to match the orientation.","type":"text"}],"kind":"symbol","url":"\/documentation\/megax\/fixedorientationview","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FixedOrientationView"}],"identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView"},"doc://megax.MegaX/documentation/MegaX/FixedOrientationView/captureDeviceTypes(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"captureDeviceTypes","kind":"identifier"},{"kind":"text","text":"("},{"text":"AVCaptureDevice","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@T@AVCaptureDeviceType","text":"DeviceType","kind":"typeIdentifier"},{"text":"...) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"abstract":[{"type":"text","text":"Sets the device types for the camera session to find the appropriate capture device."}],"title":"captureDeviceTypes(_:)","identifier":"doc:\/\/megax.MegaX\/documentation\/MegaX\/FixedOrientationView\/captureDeviceTypes(_:)","role":"symbol","url":"\/documentation\/megax\/fixedorientationview\/capturedevicetypes(_:)","type":"topic","kind":"symbol"}}}