{"interfaceLanguages":{"swift":[{"children":[{"title":"Device Type","type":"groupMarker"},{"path":"\/documentation\/megax\/swiftui\/environmentvalues\/devicetype","title":"var deviceType: DeviceType","type":"property"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/megax\/devicetype\/carplay","title":"case carPlay","type":"case"},{"path":"\/documentation\/megax\/devicetype\/mac","title":"case mac","type":"case"},{"path":"\/documentation\/megax\/devicetype\/maccatalyst","title":"case macCatalyst","type":"case"},{"path":"\/documentation\/megax\/devicetype\/pad","title":"case pad","type":"case"},{"path":"\/documentation\/megax\/devicetype\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/megax\/devicetype\/tv","title":"case tv","type":"case"},{"path":"\/documentation\/megax\/devicetype\/unspecified","title":"case unspecified","type":"case"},{"path":"\/documentation\/megax\/devicetype\/vision","title":"case vision","type":"case"},{"path":"\/documentation\/megax\/devicetype\/watch","title":"case watch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/megax\/devicetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/megax\/devicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/megax\/devicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/megax\/devicetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/megax\/devicetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/megax\/devicetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/megax\/devicetype","title":"DeviceType","type":"enum"},{"title":"Controls","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/megax\/asyncbutton\/init(_:image:role:action:)-3aamx","title":"init<S>(S, image: ImageResource, role: ButtonRole?, action: () async -> Void)","type":"init"},{"path":"\/documentation\/megax\/asyncbutton\/init(_:image:role:action:)-5k752","title":"init(LocalizedStringKey, image: ImageResource, role: ButtonRole?, action: () async -> Void)","type":"init"},{"path":"\/documentation\/megax\/asyncbutton\/init(_:systemimage:role:action:)-2mq4d","title":"init<S>(S, systemImage: String, role: ButtonRole?, action: () async -> Void)","type":"init"},{"path":"\/documentation\/megax\/asyncbutton\/init(_:systemimage:role:action:)-2n2o3","title":"init(LocalizedStringKey, systemImage: String, role: ButtonRole?, action: () async -> Void)","type":"init"},{"path":"\/documentation\/megax\/asyncbutton\/init(role:action:label:)","title":"init(role: ButtonRole?, action: () async -> Void, label: () -> L)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/megax\/asyncbutton\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(activationpoint:)-4l87j","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(activationpoint:)-vyug","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-63c24","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-70kku","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-8akt9","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactivationpoint(_:)-3dvwk","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactivationpoint(_:)-lgmq","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-1jfk0","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-39e31","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-4mdka","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-4vxck","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-8dl2l","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-9j0vq","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-ox72","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-pahs","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-50vlh","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-9pg2s","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-cniq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-1a0mg","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-2ovrx","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-73z5g","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-3y0ma","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-6bm98","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-8qeqw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-2unuq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-6rlxk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-7yu5r","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-9rh8o","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-3jrj9","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-5lctv","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-7lesq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-laah","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-1kjtl","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-5ex33","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-6fo3f","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-7l0xp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-1fm9v","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-824k3","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-g4c2","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-l55p","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-19cu","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-405zj","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-6q8x6","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-13qsq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-30ocj","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-49zfo","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-4fl8w","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-7t79b","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-oe6x","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-3wttx","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-48sgo","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-8xonj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-6ibug","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-8v45t","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-9fym4","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alignmentguide(_:computevalue:)-3cjnh","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alignmentguide(_:computevalue:)-650np","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/aspectratio(_:contentmode:)-36fa0","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/aspectratio(_:contentmode:)-5b169","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/autodeferredphotodeliveryenabled(_:)","title":"func autoDeferredPhotoDeliveryEnabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backdropblur(_:smoothedges:)","title":"func backdropBlur(LayerTransparency, smoothEdges: Edge.Set) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:in:fillstyle:)-8hoto","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:in:fillstyle:)-8wggz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(in:fillstyle:)-55phi","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(in:fillstyle:)-93awg","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-1f4ij","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-1s4tp","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-2d878","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-3i6na","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonstyle(_:)-2vou2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonstyle(_:)-9xx8v","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/camerastabilizationmode(_:)","title":"func cameraStabilizationMode(AVCaptureVideoStabilizationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/capturewhenmultitaskingenabled(_:)","title":"func captureWhenMultiTaskingEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1n8h0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1wywr","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7re80","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-171nb","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7fb7g","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-b0iv","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-38hiq","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4x2cf","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9trse","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3tkhg","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3zgd1","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7rq6s","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:_:for:)-2tgul","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:_:for:)-5m59f","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-35wl4","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-3vicx","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-680i0","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fastcaptureprioritizationenabled(_:)","title":"func fastCapturePrioritizationEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-13agr","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-5cgr3","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-igcr","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-228oc","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-860d","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-8n5ii","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4j8g0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ajiu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1s5ib","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6o7x8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4j5q5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8g6qe","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3yw6l","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-57el2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-4q2ua","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-8kny","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-n9zs","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedobject(_:)-4kdgu","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedobject(_:)-4oj30","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedsceneobject(_:)-4pchr","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedsceneobject(_:)-5qc8o","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedscenevalue(_:_:)-1aors","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedscenevalue(_:_:)-1kb36","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:_:)-8ltjc","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:_:)-9084j","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-5hgus","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-8vbbk","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-92im8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/if(_:modified:)","title":"func `if`(() -> Bool, modified: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/if(_:modified:else:)","title":"func `if`(() -> Bool, modified: (Self) -> some View, else: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:)-1zen","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:)-8r443","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-18tzu","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-220un","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-6hsg0","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-720ii","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listitemtint(_:)-1t34g","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listitemtint(_:)-4z964","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionspacing(_:)-2hf2r","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionspacing(_:)-65f2b","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-33uvs","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-7iwxr","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-c6zf","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-2ep4h","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-3bqih","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-8chnb","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-1me1n","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-3e2nw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-5bdga","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-98sfy","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-18arl","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-1pz6","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-73dyb","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-7skke","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-8iqli","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onchange(of:initial:_:)-5cdnj","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onchange(of:initial:_:)-5eup0","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:delegate:)-12c99","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:delegate:)-1n8ci","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-17ita","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-1p90","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-81j8f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-8t24b","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:coordinatespace:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:)-7g2a9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:)-9a7ke","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/renameaction(_:)-2d5fw","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/renameaction(_:)-3z86k","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/responsivecaptureenabled(_:)","title":"func responsiveCaptureEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareainset(edge:alignment:spacing:content:)-8ls9t","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareainset(edge:alignment:spacing:content:)-9mph2","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:)-5gp2","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:)-6skh3","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(_:anchor:)-12szc","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(_:anchor:)-8z4jg","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-331cd","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7015n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7xqi0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-3vmr6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-8vxsh","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-gum5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-45z82","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-5jljh","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-9rckj","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-30x9o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-4p6pz","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-8kwzo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-1aclx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-5j3cj","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-67krt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-1eq8s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-6pi1c","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-8n70v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-1tacs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-65ozb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-9fl9v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1m68f","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6moj7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6tbuu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1chay","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mva0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-859np","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(content:)-7r1li","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(content:)-8m1fc","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-2j8yp","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-6s5xb","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-k1b3","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typesettinglanguage(_:isenabled:)-41h2t","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typesettinglanguage(_:isenabled:)-54uc0","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/zeroshutterlagenabled(_:)","title":"func zeroShutterLagEnabled(Bool) -> some View","type":"method"}],"path":"\/documentation\/megax\/asyncbutton\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(activationpoint:)-4l87j","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(activationpoint:)-vyug","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-63c24","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-70kku","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaction(named:_:)-8akt9","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactivationpoint(_:)-3dvwk","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityactivationpoint(_:)-lgmq","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-1jfk0","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-39e31","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-4mdka","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-4vxck","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-8dl2l","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-9j0vq","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-ox72","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitycustomcontent(_:_:importance:)-pahs","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-50vlh","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-9pg2s","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityhint(_:)-cniq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-1a0mg","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-2ovrx","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityinputlabels(_:)-73z5g","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-3y0ma","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-6bm98","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabel(_:)-8qeqw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-2unuq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-6rlxk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-7yu5r","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:)-9rh8o","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-3jrj9","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-5lctv","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-7lesq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-laah","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-1kjtl","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-5ex33","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-6fo3f","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:entries:entrylabel:)-7l0xp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-1fm9v","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-824k3","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-g4c2","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotor(_:textranges:)-l55p","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-19cu","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-405zj","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityvalue(_:)-6q8x6","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-13qsq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-30ocj","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:)-49zfo","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-4fl8w","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-7t79b","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:actions:message:)-oe6x","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-3wttx","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-48sgo","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:)-8xonj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-6ibug","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-8v45t","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(_:ispresented:presenting:actions:message:)-9fym4","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alignmentguide(_:computevalue:)-3cjnh","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alignmentguide(_:computevalue:)-650np","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/aspectratio(_:contentmode:)-36fa0","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/aspectratio(_:contentmode:)-5b169","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/autodeferredphotodeliveryenabled(_:)","title":"func autoDeferredPhotoDeliveryEnabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backdropblur(_:smoothedges:)","title":"func backdropBlur(LayerTransparency, smoothEdges: Edge.Set) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:in:fillstyle:)-8hoto","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(_:in:fillstyle:)-8wggz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(in:fillstyle:)-55phi","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/background(in:fillstyle:)-93awg","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-1f4ij","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-1s4tp","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-2d878","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badge(_:)-3i6na","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonstyle(_:)-2vou2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/buttonstyle(_:)-9xx8v","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/camerastabilizationmode(_:)","title":"func cameraStabilizationMode(AVCaptureVideoStabilizationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/capturewhenmultitaskingenabled(_:)","title":"func captureWhenMultiTaskingEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1n8h0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1wywr","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7re80","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-171nb","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7fb7g","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-b0iv","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-38hiq","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4x2cf","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9trse","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3tkhg","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3zgd1","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7rq6s","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:_:for:)-2tgul","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:_:for:)-5m59f","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-35wl4","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-3vicx","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(_:issuppressed:)-680i0","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fastcaptureprioritizationenabled(_:)","title":"func fastCapturePrioritizationEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-13agr","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-5cgr3","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogconfirmationlabel(_:)-igcr","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-228oc","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-860d","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogmessage(_:)-8n5ii","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4j8g0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ajiu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1s5ib","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6o7x8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4j5q5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8g6qe","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3yw6l","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-57el2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-4q2ua","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-8kny","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileexporterfilenamelabel(_:)-n9zs","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedobject(_:)-4kdgu","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedobject(_:)-4oj30","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedsceneobject(_:)-4pchr","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedsceneobject(_:)-5qc8o","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedscenevalue(_:_:)-1aors","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedscenevalue(_:_:)-1kb36","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:_:)-8ltjc","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/focusedvalue(_:_:)-9084j","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-5hgus","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-8vbbk","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/help(_:)-92im8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/if(_:modified:)","title":"func `if`(() -> Bool, modified: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/if(_:modified:else:)","title":"func `if`(() -> Bool, modified: (Self) -> some View, else: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:)-1zen","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:)-8r443","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-18tzu","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-220un","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-6hsg0","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:)-720ii","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listitemtint(_:)-1t34g","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listitemtint(_:)-4z964","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionspacing(_:)-2hf2r","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/listsectionspacing(_:)-65f2b","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-33uvs","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-7iwxr","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:)-c6zf","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-2ep4h","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-3bqih","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationbartitle(_:displaymode:)-8chnb","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-1me1n","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-3e2nw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-5bdga","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationdocument(_:preview:)-98sfy","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-18arl","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-1pz6","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-73dyb","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-7skke","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/navigationtitle(_:)-8iqli","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onchange(of:initial:_:)-5cdnj","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onchange(of:initial:_:)-5eup0","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:delegate:)-12c99","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:delegate:)-1n8ci","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-17ita","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-1p90","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-81j8f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ondrop(of:istargeted:perform:)-8t24b","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:coordinatespace:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:)-7g2a9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:)-9a7ke","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/renameaction(_:)-2d5fw","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/renameaction(_:)-3z86k","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/responsivecaptureenabled(_:)","title":"func responsiveCaptureEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareainset(edge:alignment:spacing:content:)-8ls9t","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareainset(edge:alignment:spacing:content:)-9mph2","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:)-5gp2","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:)-6skh3","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(_:anchor:)-12szc","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(_:anchor:)-8z4jg","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-331cd","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7015n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7xqi0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-3vmr6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-8vxsh","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:editabletokens:placement:prompt:token:)-gum5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-45z82","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-5jljh","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:ispresented:placement:prompt:)-9rckj","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-30x9o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-4p6pz","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:)-8kwzo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-1aclx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-5j3cj","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/searchable(text:placement:prompt:suggestions:)-67krt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-1eq8s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-6pi1c","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:ispresented:placement:prompt:token:)-8n70v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-1tacs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-65ozb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:placement:prompt:token:)-9fl9v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1m68f","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6moj7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6tbuu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1chay","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mva0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-859np","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/asyncbutton\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(content:)-7r1li","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(content:)-8m1fc","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-2j8yp","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-6s5xb","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typeselectequivalent(_:)-k1b3","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typesettinglanguage(_:isenabled:)-41h2t","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/typesettinglanguage(_:isenabled:)-54uc0","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/asyncbutton\/zeroshutterlagenabled(_:)","title":"func zeroShutterLagEnabled(Bool) -> some View","type":"method"}],"path":"\/documentation\/megax\/asyncbutton\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/megax\/asyncbutton","title":"AsyncButton","type":"struct"},{"title":"Gestures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/body","title":"var body: AnyGesture<Value>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/value","title":"SpatialLongPressGesture.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/exclusively(before:)","title":"func exclusively<Other>(before: Other) -> ExclusiveGesture<Self, Other>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/map(_:)","title":"func map<T>((Self.Value) -> T) -> _MapGesture<Self, T>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/onchanged(_:)","title":"func onChanged((Self.Value) -> Void) -> _ChangedGesture<Self>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/onended(_:)","title":"func onEnded((Self.Value) -> Void) -> _EndedGesture<Self>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/sequenced(before:)","title":"func sequenced<Other>(before: Other) -> SequenceGesture<Self, Other>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/simultaneously(with:)","title":"func simultaneously<Other>(with: Other) -> SimultaneousGesture<Self, Other>","type":"method"},{"path":"\/documentation\/megax\/spatiallongpressgesture\/updating(_:body:)","title":"func updating<State>(GestureState<State>, body: (Self.Value, inout State, inout Transaction) -> Void) -> GestureStateGesture<Self, State>","type":"method"}],"path":"\/documentation\/megax\/spatiallongpressgesture\/gesture-implementations","title":"Gesture Implementations","type":"symbol"}],"path":"\/documentation\/megax\/spatiallongpressgesture","title":"SpatialLongPressGesture","type":"struct"},{"path":"\/documentation\/megax\/swiftui\/view\/onlongpressgesture(minimumduration:maximumdistance:coordinatespace:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"title":"Backdrop Blur Layer","type":"groupMarker"},{"path":"\/documentation\/megax\/swiftui\/view\/backdropblur(_:smoothedges:)","title":"func backdropBlur(LayerTransparency, smoothEdges: Edge.Set) -> some View","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/megax\/layertransparency\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/megax\/layertransparency\/ultra","title":"case ultra","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/megax\/layertransparency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/megax\/layertransparency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/megax\/layertransparency","title":"LayerTransparency","type":"enum"},{"title":"Camera","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/megax\/cameraview\/init(onfinishcapture:errorhandler:)","title":"init(onFinishCapture: (Data) -> Void, errorHandler: ((CameraError) -> Void)?)","type":"init"},{"path":"\/documentation\/megax\/cameraview\/init(onfinishcapture:errorhandler:photoalbum:)","title":"init(onFinishCapture: (Data) -> Void, errorHandler: ((CameraError) -> Void)?, photoAlbum: () -> P)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/megax\/cameraview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(activationpoint:)-7on0j","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(activationpoint:)-8sb4w","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-13v49","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-184xt","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-1k73e","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactivationpoint(_:)-2cvwd","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactivationpoint(_:)-9xpo2","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-1u4c8","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-2h8fy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-3a56r","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-4ha7d","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-5dv9t","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-609o","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-6yc6v","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-94ea0","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-1vtzg","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-2369","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-2clh8","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-5k0f","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-6atyy","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-9coi2","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-43l31","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-731lx","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-88rif","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-325tg","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-3vkfb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-8dm8t","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-8tz3p","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-27ck7","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-40b9h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8p6f4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8vi0u","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-3xmbb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-6r8eo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-97hns","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-9oryg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-2zq6b","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-51c6m","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-5gajr","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-osmz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-2be6x","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-6smfy","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-71e40","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-1aagq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-6s4n3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-6zdj4","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-2395n","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-7vipw","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-8zk7a","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-1hwcs","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-3e2oe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-3yqpy","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-1242s","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-90mfp","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-9gt70","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alignmentguide(_:computevalue:)-6tmws","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alignmentguide(_:computevalue:)-9bqzy","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/aspectratio(_:contentmode:)-3916x","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/aspectratio(_:contentmode:)-4jazw","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/autodeferredphotodeliveryenabled(_:)","title":"func autoDeferredPhotoDeliveryEnabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backdropblur(_:smoothedges:)","title":"func backdropBlur(LayerTransparency, smoothEdges: Edge.Set) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:in:fillstyle:)-5r58j","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:in:fillstyle:)-cco2","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(in:fillstyle:)-9bth7","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(in:fillstyle:)-mvpb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-1vv52","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-3lkhn","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-4pk3a","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-7kyxw","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonstyle(_:)-77kfy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonstyle(_:)-o235","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/camerastabilizationmode(_:)","title":"func cameraStabilizationMode(AVCaptureVideoStabilizationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/capturewhenmultitaskingenabled(_:)","title":"func captureWhenMultiTaskingEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7lrhm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-99dij","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-z8fw","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1nmo5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5fh03","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-961fl","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2oory","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3dkaj","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-977vo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1jul5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-43dmg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-53rof","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:_:for:)-4369u","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:_:for:)-8ckup","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-1m013","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-2tsqe","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-8tgz9","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fastcaptureprioritizationenabled(_:)","title":"func fastCapturePrioritizationEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-1hm1p","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-2an1b","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-9mjjs","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-1rbqx","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-4qm91","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-8bug7","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7ood7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7smxu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2u14c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5hnbo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1l973","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4p3vk","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5v4jp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9m17","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-8j9wv","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-9bhh1","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-wt46","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedobject(_:)-1o17u","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedobject(_:)-6aog5","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedsceneobject(_:)-3j77j","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedsceneobject(_:)-9xnbh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedscenevalue(_:_:)-9trz7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedscenevalue(_:_:)-v0s","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:_:)-16nms","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:_:)-47z2o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-4lvr4","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-4uu6m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-7rva8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/if(_:modified:)","title":"func `if`(() -> Bool, modified: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/if(_:modified:else:)","title":"func `if`(() -> Bool, modified: (Self) -> some View, else: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:)-66em","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:)-lxxz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-3uxhx","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9bq9c","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9jyx6","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9sqpy","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listitemtint(_:)-2ezec","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listitemtint(_:)-2rda","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionspacing(_:)-374vh","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionspacing(_:)-olc1","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-4w1mt","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-6n8pd","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-96zl0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-21aju","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-73emv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-9uckv","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-37bcj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-6cxbs","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-7gnpv","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-9raev","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-2df5a","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-2xft1","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-3xjas","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-3yg11","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-6l5yf","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onchange(of:initial:_:)-4ksac","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onchange(of:initial:_:)-8n1is","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:delegate:)-3pthd","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:delegate:)-6znis","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-15l2y","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-79q27","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-7tt7i","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-9e39i","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:coordinatespace:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:)-5tc7e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:)-71pm2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/renameaction(_:)-1cy68","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/renameaction(_:)-4ddrb","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/responsivecaptureenabled(_:)","title":"func responsiveCaptureEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareainset(edge:alignment:spacing:content:)-1usfn","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareainset(edge:alignment:spacing:content:)-1wr9z","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:)-2qtwi","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:)-l246","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(_:anchor:)-4rraz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(_:anchor:)-645sj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4a4sz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8zkz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-h808","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-4bpqs","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-m0g3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-s12y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-30tld","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-4mzwi","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-5ucnx","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-1az7j","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-2haja","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-5inwc","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-3rw20","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-72h8q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-9ur8u","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-224b6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5pmwv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7j4t8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-42uun","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-782ba","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-8ue9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3s0kz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4kb66","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-c2hh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5rq5g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77wes","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-79wqs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(content:)-5ii09","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(content:)-6hywl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-8s0u7","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-8tc0c","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-ynxn","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typesettinglanguage(_:isenabled:)-1v6lx","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typesettinglanguage(_:isenabled:)-6hc1t","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/zeroshutterlagenabled(_:)","title":"func zeroShutterLagEnabled(Bool) -> some View","type":"method"}],"path":"\/documentation\/megax\/cameraview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(activationpoint:)-7on0j","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(activationpoint:)-8sb4w","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-13v49","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-184xt","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaction(named:_:)-1k73e","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactivationpoint(_:)-2cvwd","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityactivationpoint(_:)-9xpo2","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-1u4c8","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-2h8fy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-3a56r","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-4ha7d","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-5dv9t","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-609o","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-6yc6v","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitycustomcontent(_:_:importance:)-94ea0","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-1vtzg","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-2369","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityhint(_:)-2clh8","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-5k0f","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-6atyy","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityinputlabels(_:)-9coi2","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-43l31","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-731lx","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabel(_:)-88rif","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-325tg","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-3vkfb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-8dm8t","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:)-8tz3p","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-27ck7","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-40b9h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8p6f4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8vi0u","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-3xmbb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-6r8eo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-97hns","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:entries:entrylabel:)-9oryg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-2zq6b","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-51c6m","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-5gajr","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotor(_:textranges:)-osmz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-2be6x","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-6smfy","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityvalue(_:)-71e40","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-1aagq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-6s4n3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:)-6zdj4","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-2395n","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-7vipw","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:actions:message:)-8zk7a","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-1hwcs","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-3e2oe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:)-3yqpy","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-1242s","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-90mfp","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(_:ispresented:presenting:actions:message:)-9gt70","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alignmentguide(_:computevalue:)-6tmws","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alignmentguide(_:computevalue:)-9bqzy","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/aspectratio(_:contentmode:)-3916x","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/aspectratio(_:contentmode:)-4jazw","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/autodeferredphotodeliveryenabled(_:)","title":"func autoDeferredPhotoDeliveryEnabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backdropblur(_:smoothedges:)","title":"func backdropBlur(LayerTransparency, smoothEdges: Edge.Set) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:in:fillstyle:)-5r58j","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(_:in:fillstyle:)-cco2","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(in:fillstyle:)-9bth7","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/background(in:fillstyle:)-mvpb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-1vv52","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-3lkhn","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-4pk3a","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badge(_:)-7kyxw","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonstyle(_:)-77kfy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/buttonstyle(_:)-o235","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/camerastabilizationmode(_:)","title":"func cameraStabilizationMode(AVCaptureVideoStabilizationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/capturewhenmultitaskingenabled(_:)","title":"func captureWhenMultiTaskingEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7lrhm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-99dij","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-z8fw","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1nmo5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5fh03","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-961fl","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2oory","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3dkaj","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-977vo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1jul5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-43dmg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-53rof","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:_:for:)-4369u","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:_:for:)-8ckup","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-1m013","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-2tsqe","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(_:issuppressed:)-8tgz9","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fastcaptureprioritizationenabled(_:)","title":"func fastCapturePrioritizationEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-1hm1p","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-2an1b","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogconfirmationlabel(_:)-9mjjs","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-1rbqx","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-4qm91","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogmessage(_:)-8bug7","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7ood7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7smxu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2u14c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5hnbo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1l973","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4p3vk","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5v4jp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9m17","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-8j9wv","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-9bhh1","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileexporterfilenamelabel(_:)-wt46","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedobject(_:)-1o17u","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedobject(_:)-6aog5","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedsceneobject(_:)-3j77j","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedsceneobject(_:)-9xnbh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedscenevalue(_:_:)-9trz7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedscenevalue(_:_:)-v0s","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:_:)-16nms","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/focusedvalue(_:_:)-47z2o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-4lvr4","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-4uu6m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/help(_:)-7rva8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/if(_:modified:)","title":"func `if`(() -> Bool, modified: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/if(_:modified:else:)","title":"func `if`(() -> Bool, modified: (Self) -> some View, else: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:)-66em","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:)-lxxz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-3uxhx","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9bq9c","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9jyx6","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:)-9sqpy","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listitemtint(_:)-2ezec","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listitemtint(_:)-2rda","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionspacing(_:)-374vh","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/listsectionspacing(_:)-olc1","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/megax\/cameraview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-4w1mt","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-6n8pd","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:)-96zl0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-21aju","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-73emv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationbartitle(_:displaymode:)-9uckv","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-37bcj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-6cxbs","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-7gnpv","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationdocument(_:preview:)-9raev","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-2df5a","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-2xft1","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-3xjas","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-3yg11","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/navigationtitle(_:)-6l5yf","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onchange(of:initial:_:)-4ksac","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onchange(of:initial:_:)-8n1is","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:delegate:)-3pthd","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:delegate:)-6znis","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-15l2y","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-79q27","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-7tt7i","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ondrop(of:istargeted:perform:)-9e39i","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:coordinatespace:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:)-5tc7e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:)-71pm2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/renameaction(_:)-1cy68","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/renameaction(_:)-4ddrb","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/responsivecaptureenabled(_:)","title":"func responsiveCaptureEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareainset(edge:alignment:spacing:content:)-1usfn","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareainset(edge:alignment:spacing:content:)-1wr9z","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:)-2qtwi","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:)-l246","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(_:anchor:)-4rraz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(_:anchor:)-645sj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4a4sz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8zkz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-h808","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-4bpqs","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-m0g3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:editabletokens:placement:prompt:token:)-s12y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-30tld","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-4mzwi","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:ispresented:placement:prompt:)-5ucnx","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-1az7j","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-2haja","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:)-5inwc","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-3rw20","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-72h8q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/searchable(text:placement:prompt:suggestions:)-9ur8u","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-224b6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5pmwv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7j4t8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-42uun","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-782ba","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:placement:prompt:token:)-8ue9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3s0kz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4kb66","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-c2hh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5rq5g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77wes","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-79wqs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/megax\/cameraview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(content:)-5ii09","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(content:)-6hywl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-8s0u7","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-8tc0c","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typeselectequivalent(_:)-ynxn","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typesettinglanguage(_:isenabled:)-1v6lx","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/typesettinglanguage(_:isenabled:)-6hc1t","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/megax\/cameraview\/zeroshutterlagenabled(_:)","title":"func zeroShutterLagEnabled(Bool) -> some View","type":"method"}],"path":"\/documentation\/megax\/cameraview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/megax\/cameraview","title":"CameraView","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/megax\/cameraerror\/captureerror(_:)","title":"case captureError(Error)","type":"case"},{"path":"\/documentation\/megax\/cameraerror\/permissiondenied","title":"case permissionDenied","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/megax\/cameraerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/megax\/cameraerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/megax\/cameraerror","title":"CameraError","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/megax\/apporientationdelegate\/application(_:supportedinterfaceorientationsfor:)","title":"func application(UIApplication, supportedInterfaceOrientationsFor: UIWindow?) -> UIInterfaceOrientationMask","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/megax\/apporientationdelegate\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/megax\/apporientationdelegate\/uiapplicationdelegate-implementations","title":"UIApplicationDelegate Implementations","type":"symbol"}],"path":"\/documentation\/megax\/apporientationdelegate","title":"AppOrientationDelegate","type":"class"},{"path":"\/documentation\/megax\/swiftui\/view\/autodeferredphotodeliveryenabled(_:)","title":"func autoDeferredPhotoDeliveryEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/zeroshutterlagenabled(_:)","title":"func zeroShutterLagEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/responsivecaptureenabled(_:)","title":"func responsiveCaptureEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/fastcaptureprioritizationenabled(_:)","title":"func fastCapturePrioritizationEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/capturewhenmultitaskingenabled(_:)","title":"func captureWhenMultiTaskingEnabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/camerastabilizationmode(_:)","title":"func cameraStabilizationMode(AVCaptureVideoStabilizationMode) -> some View","type":"method"},{"title":"Extensions For SwiftUI","type":"groupMarker"},{"path":"\/documentation\/megax\/swiftui\/view\/if(_:modified:)","title":"func `if`(() -> Bool, modified: (Self) -> some View) -> some View","type":"method"},{"path":"\/documentation\/megax\/swiftui\/view\/if(_:modified:else:)","title":"func `if`(() -> Bool, modified: (Self) -> some View, else: (Self) -> some View) -> some View","type":"method"}],"path":"\/documentation\/megax","title":"MegaX","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}